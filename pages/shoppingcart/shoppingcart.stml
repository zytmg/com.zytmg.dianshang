<template>
    <view class="main"> 
        <navigationBar title="购物车"></navigationBar>
        <view class="content">
            <scroll-view v-if="haveData" scroll-y="true" class="listView">
                <view class="cell" v-for="(item,index) in dataList">
                    <view data-id={item.id} data-wareCount={item.wareCount} class="container" onclick={this.fnOpenDetailWin}>
                        <label>
                            <checkbox checked={item.selected} data-index={index} class="checkbox" icon="../../image/order_off.png" selectedIcon="../../image/order_on.png" onchange={this.fnSelectedStateChanged}></checkbox>
                        </label>
                        <image class="thumbnail" src={item.thumbnail} placeholder="../../image/default_square.png"></image>
                        <view class="info">
                            <text class="info-name">{item.name + ' ' + (item.unit||'')}</text>
                            <text class="info-description">{item.description}</text>
                            <text class="info-price">{'￥'+item.price}</text>
                            <text class="info-origin-price">{'￥'+item.originPrice}</text>
                        </view>
                        <view class="control">
                            <image class={item.wareCount>0?'minus':'none'} data-index={index} src="../../image/minus.png" onclick={this.fnMinus}>
                            <text class={item.wareCount>0?'count':'none'}>{item.wareCount}</text>
                            <image class="add" data-index={index} src="../../image/add.png" onclick={this.fnAdd}>
                        </view>
                    </view>
                </view>
            </scroll-view>
            <view v-else id="empty" class="empty">
                <image class="empty-icon" src="../../image/shoppingcart_empty.png"></image>
                <view class="closeBtn" onclick="fnCloseWin();"></view>
            </view>
        </view>
        <view class="footer">
            <label class="left">
                <checkbox id="selectAll" class="checkbox" icon="../../image/order_off.png" selectedIcon="../../image/order_on.png" onchange={this.fnSelectAll}></checkbox>
                <view>
                    <text style="color:#000;">全选</text>
                    <text class="bottomInfo">{'已选'+this.data.count+'件'}</text>
                </view>
            </label>
            <view class="right">
                <view class="right-info">
                    <view class="right-info-top">
                        <text>总金额:</text><text class="amount">{'￥'+this.data.amount}</text>
                    </view>
                    <text class="bottomInfo">不含运费</text>
                </view>
                <image class="buy-button" src="../../image/buy.png" onclick="fnOpenOrderWin();"/>
            </view>
        </view>
        <safe-area></safe-area>
    </view>
</template>
<script>
import navigationBar from "../../components/navigationBar.stml"
import $kn from "../../script/kn.js"
export default {
    name: 'shoppingcart',
    data() {
        return {
            haveData: false,
            dataList: [],
            count: 0,
            amount: 0
        }
    },
    methods: {
        apiready() {
            var that = this;
            // 监听购物车更新事件(自定义事件)，同步更新列表展示中选定商品的数量
            api.addEventListener({
                name: 'onGetCartInfo'
            }, function(ret, err) {
                var data = ret.value;
                var wareList = data.wareList;
                that.data.haveData = wareList.length>0?true:false;
                that.data.dataList = wareList;
                that.fnGetShoppingCartAmount(wareList);
            });
            api.addEventListener({
                name: 'navitembtn'
            }, function(ret){
                if (ret.type == 'left') {
                    api.closeWin();
                }
            });
            this.getCartInfo();
        },

        getCartInfo() {
            var that = this;
            api.showProgress({
                title: '',
                text: ''
            });
            $kn.ajax({
                url: 'carts/getCartInfo'
            }, function(ret, err) {
                if (ret && ret.data) {
                    var data = ret.data;
                    var wareList = data.wareList;
                    if (wareList.length > 0) {
                        that.data.haveData = true;
                        that.data.dataList = wareList;
                        that.fnGetShoppingCartAmount(wareList);
                        
                        var selectAll = true;
                        for (var i = 0; i < wareList.length; i++) {
                            if (!wareList[i].selected) {
                                selectAll = false;
                                break;
                            }
                        }
                        $kn.byId('selectAll').checked = selectAll;
                    }
                }
                api.hideProgress();
            });
        },

        // 计算购物车中的商品总数及总金额
         fnGetShoppingCartAmount(data_) {
            var amountValue = 0;
            var countValue = 0;
            var offState = 0;
            for (var i = 0; i < data_.length; i++) {
                if (!data_[i].selected) {
                    continue;
                }
                countValue += data_[i].wareCount;
                amountValue += data_[i].price * data_[i].wareCount;
            }
            amountValue = Math.round(amountValue * 10) / 10;
            this.data.amount = amountValue;
            this.data.count = countValue;
        },

        // 更新当前窗口中显示的购物车中的商品选中状态
        fnSelectedStateChanged(e) {
            var index = e.currentTarget.dataset.index;
            var item = this.data.dataList[index];
            item.selected = e.detail.checked;
            this.fnGetShoppingCartAmount(this.data.dataList);
                
            // 发送购物车更新自定义事件
            api.sendEvent({
                name: 'updateShoppingCart',
                extra: {
                    wareId: item.id,
                    wareCount: item.wareCount,
                    selected: item.selected
                }
            });
        },
        fnOpenDetailWin(e) {
            var id = e.currentTarget.dataset.id;
            var wareCount = e.currentTarget.dataset.wareCount;
            api.openWin({
                name: 'ware'+id,
                url: '../ware/ware.stml',
                pageParam: {
                    wareId: id,
                    wareCount: wareCount
                },
                animation: {
                    type: "fade"
                }
            });
        },
        fnMinus(e) {
            var index = e.currentTarget.dataset.index;
            var item = this.data.dataList[index];
            if (item.wareCount > 0) {
                item.wareCount--;
                var listView = document.getElementById('listView');
                if (item.wareCount > 0) {
                    
                } else {
                    this.data.dataList.splice(index, 1);
                }
                
                // 发送购物车更新自定义事件，传递商品Id和商品数量
                api.sendEvent({
                    name: 'updateShoppingCart',
                    extra: {
                        wareId: item.id,
                        wareCount: item.wareCount,
                        selected: item.selected
                    }
                });
            }
            this.fnGetShoppingCartAmount(this.data.dataList);
            if (this.data.dataList.length == 0) {
                this.data.haveData = false;
            }
        },
        fnAdd(e) {
            var index = e.currentTarget.dataset.index;
            var item = this.data.dataList[index];
            item.wareCount++;
                
            // 发送购物车更新自定义事件，传递商品Id和商品数量
            api.sendEvent({
                name: 'updateShoppingCart',
                extra: {
                    wareId: item.id,
                    wareCount: item.wareCount,
                    selected: item.selected
                }
            });
            this.fnGetShoppingCartAmount(this.data.dataList);
        },
        fnSelectAll(e) {
            if (!this.data.dataList)return;
            for (var i = 0; i < this.data.dataList.length; i++) {
                this.data.dataList[i].selected = e.detail.checked;
            }
            this.fnGetShoppingCartAmount(this.data.dataList);
            $kn.ajax({
                url:'carts/selectAll',
                method:'post',
                data: {
                    body:{
                        selectAll: e.detail.checked
                    }
                }
            }, function(ret, err){

            });
        },
        fnCloseWin() {
            api.closeWin();
        },
        fnOpenOrderWin() {
            if (this.data.count == 0) {
                api.toast({
                    msg: '未选择商品'
                });
                return;
            }
            
            var dataList = [];
            for (var i = 0; i < this.data.dataList.length; i++) {
                if (this.data.dataList[i].selected) {
                    dataList.push(this.data.dataList[i]);
                }
            }
            api.openWin({
                name: 'order',
                url: '../order/order.stml',
                pageParam: {
                    dataList: dataList
                }
            });
        }
    }
}
</script>
<style>
    .main {
        width: 100%;
        height: 100%;
        background-color: #fff;
    }
    .content {
        flex: 1;
    }
    .empty {
        align-items: center;
        flex:1;
        width: 100%;
    }
    .empty-icon {
        width: 115px;
        height: 190px;
        margin-top: 50px;
    }
    .closeBtn {
        position: absolute;
        width: 100px;
        height: 30px;
        top: 205px;
    }
    .listView {
        width: 100%;
        height: 100%;
        background-color: #f1f1f1;
    }

    .cell {
        height: 130px;
    }

    .container {
        flex-direction: row;
        align-items: center;
        width: 100%;
        height: 120px;
        background-color: #fff;
    }

    .container:active {
        background-color: #f8f8f8;
    }
    
    .thumbnail {
        width: 100px;
        height: 100px;
    }
    
    .info {
        flex: 1;
        height: 100px;
        padding-left: 8px;
        justify-content: center;
    }
    
    .info-name {
        font-size: 16px;
        color: #000;
        font-weight: 500;
    }

    .info-description {
        font-size: 14px;
        color: gray;
    }
    
    .info-price {
        font-size: 14px;
        color: #e3007f;
    }
    
    .info-origin-price {
        font-size: 11px;
        color: #c0c0c0;
        text-decoration: line-through;
    }

    .control {
        flex-direction: row;
        position: absolute;
        right: 10px;
        bottom: 20px;
    }
    
    .minus, .add {
        display: flex;
        width: 25px;
        height: 25px;
    }

    .minus:active {
        opacity: 0.7;
    }

    .add:active {
        opacity: 0.7;
    }

    .none {
        display: none;
    }
    
    .count {
        display: flex;
        width: 40px;
        height: 24px;
        line-height: 24px;
        margin: 0 5px;
        color: #444;
        font-size: 14px;
        text-align: center;
        border-radius: 12px;
        border: 1px solid #ddd;
        background-color: #fff;
    }
    .footer {
        flex-direction: row;
        justify-content: space-between;
        width: 100%;
        height: 50px;
        border-top: 1px solid #d1d1d1;
    }
    .left {
        flex-direction: row;
        align-items: center;
        height: 100%;
    }
    .checkbox {
        margin: 8px 8px;
        width: 15px;
        height: 15px;
    }
    .bottomInfo {
        font-size: 10px;
        color: #888;
    }
    .right {
        flex-direction: row;
        align-items: center;
        height: 100%;
    }
    .right-info {
        align-items: flex-end;
        margin-right: 5px;
    }
    .right-info-top {
        flex-direction: row;
    }
    .amount {
        color: #e3007f;
    }
    .buy-button {
        width: 94px;
        height: 37px;
    }
</style>
